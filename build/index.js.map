{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AAItD,MAAM,sBAAsB,GAAG;IAC7B,MAAM;IACN,MAAM;IACN,KAAK;IACL,UAAU;IACV,cAAc;IACd,MAAM;IACN,QAAQ;CACT,CAAC;AAEF,SAAS,qBAAqB,CAAC,MAA4B;IACzD,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;IACtC,MAAM,gBAAgB,GAAG;QACvB,GAAG,MAAM;QACT,IAAI,IAAI;YACN,OAAO,CAAC,IAAI,CACV,8GAA8G,CAC/G,CAAC;YACF,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QAC9C,CAAC;KACF,CAAC;IACF,KAAK,MAAM,GAAG,IAAI,sBAAsB,EAAE,CAAC;QACzC,MAAM,CAAC,cAAc,CAAC,gBAAgB,EAAE,GAAG,EAAE;YAC3C,GAAG;gBACD,OAAO,CAAC,IAAI,CACV,QAAQ,GAAG,gJAAgJ,CAC5J,CAAC;gBACF,OAAO,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC;YAC3B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IACD,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAED,cAAc;AACd;;;;;;;;;;GAUG;AACH,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,EACrC,IAAI,GAAG,KAAK,EACZ,oBAAoB,GAAG,IAAI,EAC3B,QAAQ,GAAG,KAAK,MACS,EAAE;IAC3B,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC7B,IAAI,GAAG,CAAC,IAAI,CAAa,CAAC;IAC5B,CAAC;IACD,MAAM,MAAM,GAAG,MAAM,kBAAkB,CAAC,gBAAgB,CAAC;QACvD,IAAI;QACJ,oBAAoB;QACpB,QAAQ;KACT,CAAC,CAAC;IACH,OAAO,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACvC,CAAC","sourcesContent":["import ExpoDocumentPicker from './ExpoDocumentPicker';\r\nimport { DocumentPickerOptions, DocumentPickerResult } from './types';\r\nexport { DocumentPickerOptions, DocumentPickerResult as DocumentResult };\r\n\r\nconst DEPRECATED_RESULT_KEYS = [\r\n  'name',\r\n  'size',\r\n  'uri',\r\n  'mimeType',\r\n  'lastModified',\r\n  'file',\r\n  'output',\r\n];\r\n\r\nfunction mergeDeprecatedResult(result: DocumentPickerResult): DocumentPickerResult {\r\n  const firstAsset = result.assets?.[0];\r\n  const deprecatedResult = {\r\n    ...result,\r\n    get type() {\r\n      console.warn(\r\n        'Key \"type\" in the document picker result is deprecated and will be removed in SDK 49, use \"canceled\" instead'\r\n      );\r\n      return this.canceled ? 'cancel' : 'success';\r\n    },\r\n  };\r\n  for (const key of DEPRECATED_RESULT_KEYS) {\r\n    Object.defineProperty(deprecatedResult, key, {\r\n      get() {\r\n        console.warn(\r\n          `Key \"${key}\" in the document picker result is deprecated and will be removed in SDK 49, you can access selected assets through the \"assets\" array instead`\r\n        );\r\n        return firstAsset?.[key];\r\n      },\r\n    });\r\n  }\r\n  return deprecatedResult;\r\n}\r\n\r\n// @needsAudit\r\n/**\r\n * Display the system UI for choosing a document. By default, the chosen file is copied to [the app's internal cache directory](filesystem.md#filesystemcachedirectory).\r\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\r\n * > Therefore, calling `getDocumentAsync` in `componentDidMount`, for example, will **not** work as\r\n * > intended. The `cancel` event will not be returned in the browser due to platform restrictions and\r\n * > inconsistencies across browsers.\r\n *\r\n * @return On success returns a promise that fulfils with [`DocumentResult`](#documentresult) object.\r\n *\r\n * If the user cancelled the document picking, the promise resolves to `{ type: 'cancel' }`.\r\n */\r\nexport async function getDocumentAsync({\r\n  type = '*/*',\r\n  copyToCacheDirectory = true,\r\n  multiple = false,\r\n}: DocumentPickerOptions = {}): Promise<DocumentPickerResult> {\r\n  if (typeof type === 'string') {\r\n    type = [type] as string[];\r\n  }\r\n  const result = await ExpoDocumentPicker.getDocumentAsync({\r\n    type,\r\n    copyToCacheDirectory,\r\n    multiple,\r\n  });\r\n  return mergeDeprecatedResult(result);\r\n}\r\n"]}